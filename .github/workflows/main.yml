name: Workflow

# Trigger workflow on push to main or PR
on:
  push:
    branches:
      - main
    paths - ignore:
      - 'README.md'

# Define permissions for the workflow
permissions:
  contents: read
  id-token: write

jobs:
  # ------------------------------
  # Continuous Integration Job
  # ------------------------------
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3

      - name: Lint code  
        run:  echo "Linting repository"

      - name: Run Unit Tests
        run: echo"Running unit tests"

  # ------------------------------
  # Continuous Delivery Job (Docker Build + Push)
  # ------------------------------
  build-and-push-ecr-image
    name: Continuous Delivery
    needs: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Change if your region differs

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sensorproject
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  # ------------------------------
  # Continuous Deployment Job (AWS EC2)
  # ------------------------------
  continous-deployment:
    name: Continuous Deployment
    needs:   build-and-push-ecr-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Deploy Docker Image on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Pulling latest image from ECR..."
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
            docker pull ${{ secrets.ECR_REGISTRY }}/sensorproject:latest
            docker stop sensorproject || true
            docker rm sensorproject || true
            docker run -d --name sensorproject -p 5000:5000 ${{ secrets.ECR_REGISTRY }}/sensorproject:latest
            echo "Deployment complete "











